.moulinette-options {
	background-color: RGBA($emu-color-background-darkest, 0.8);
	background-image: $global-image-background-darkest;
	border-radius: $global-border-radius-controls;
	box-shadow: none;
	color: RGB($emu-color-text-lightest);

	@include layout {
		box-sizing: border-box;
		font-size: $global-font-size-lg;
		line-height: 1;
		z-index: $global-z-index-fixed;
	}

	li {
		@extend %primary-button;

		&[data-type="empty"] {
			pointer-events: none;
		}
	}
}

#moulinette.forge {
	.window-content form {
		@include layout {
			display: grid;
			grid-template-areas:
				"nav nav"
				"body body"
				"logo logo-text";
			grid-template-columns: min-content 1fr;
			grid-template-rows: min-content 1fr min-content;
			overflow: hidden;

			> nav {
				grid-area: nav;
			}

			> .main {
				display: flex;
				flex-direction: column;
				grid-area: body;
				margin: 0;
				overflow: auto;

				> * {
					flex: 0 0 auto;
				}

				.list {
					flex: 1 1 auto;
				}

				.options {
					align-items: center;
					display: flex;
					padding: 0;

					input {
						margin: 0 $global-space-base;
						width: auto;
					}

					.option {
						align-items: center;
						display: flex;
						margin-inline-end: $global-space-sm;

						> i {
							margin: 0 $global-space-base;
						}
					}
				}

				.form-group.search button i {
					margin: 0;
				}

				footer {
					.actions {
						margin-block-start: $global-space-base;

						&:empty {
							display: none;
						}
					}
				}
			}

			> .logo {
				@include size(to-rem(56px));
				float: initial;
				grid-area: logo;
				max-width: initial;
				padding: 0;
				margin-block-start: $global-space-sm;
				margin-inline-end: $global-space-sm;
			}

			> p {
				grid-area: logo-text;
				margin: 0;
				margin-block-start: $global-space-sm;
			}
		}
	}

	&.mtte .list {
		@include layout {
			height: auto;
			margin-block-start: $global-space-base;
			overflow: auto;
		}

		> div {
			padding: $global-space-xs $global-space-base;

			@include layout {
				background-color: transparent;
				min-height: 0;

				&:nth-of-type(even) {
					background-color: RGBA($emu-color-background-light, 0.1);
				}

				&:hover {
					background-color: RGB($emu-color-primary);
					color: RGB($emu-color-text-lightest);

					> a {
						color: RGB($emu-color-text-lightest);
					}
				}

				> * {
					flex: 0 0 auto;
				}

				> span,
				> a {
					width: auto;
				}

				> span {
					flex: 1 1 auto;
				}

				> img {
					margin: 0;
				}

				> input {
					margin-inline-end: $global-space-sm;
				}
			}
		}
	}

	.filepicker {
		@include layout {
			max-width: to-rem(88px);
		}

		.display-modes a {
			@extend %primary-button;

			@include layout {
				margin-inline-start: $global-space-base;
				width: auto;

				> i {
					margin: 0;
				}
			}
		}
	}
}
